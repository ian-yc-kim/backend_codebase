from sqlalchemy import Column, String, Text, TIMESTAMP, func
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.types import JSON
from sqlalchemy.ext.declarative import declarative_base
import uuid

Base = declarative_base()

class UserInput(Base):
    """
    Represents a user input for generating novel content.

    Attributes:
    id (UUID): Unique identifier for the user input.
    user_id (UUID): Identifier for the user who provided the input.
    plot (str): Plot description provided by the user.
    setting (str): Setting description provided by the user.
    theme (str): Theme description provided by the user.
    conflict (str): Conflict description provided by the user.
    additional_preferences (dict): Additional preferences provided by the user in JSON format.
    ai_generated_content (str): Content generated by the AI based on the user input.
    created_at (datetime): Timestamp when the user input was created.
    updated_at (datetime): Timestamp when the user input was last updated.
    """

    __tablename__ = 'user_inputs'

    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4)
    user_id = Column(UUID(as_uuid=True), nullable=True)
    plot = Column(Text, nullable=False)
    setting = Column(Text, nullable=False)
    theme = Column(Text, nullable=False)
    conflict = Column(Text, nullable=False)
    additional_preferences = Column(JSON, nullable=True)
    ai_generated_content = Column(Text, nullable=True)
    created_at = Column(TIMESTAMP(timezone=True), server_default=func.now())
    updated_at = Column(TIMESTAMP(timezone=True), server_default=func.now(), onupdate=func.now())

class NovelIteration(Base):
    __tablename__ = 'novel_iterations'

    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4)
    iteration_number = Column(String, nullable=False)
    content = Column(Text, nullable=False)
    created_at = Column(TIMESTAMP(timezone=True), server_default=func.now())
    updated_at = Column(TIMESTAMP(timezone=True), server_default=func.now(), onupdate=func.now())
